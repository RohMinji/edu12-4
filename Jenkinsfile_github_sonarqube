def label = "agent-${UUID.randomUUID().toString()}"
def gitBranch = 'master'
def docker_registry = "ghcr.io"  
def imageName = "ghcr.io/shclub/edu12-backend"
def fromImage = "ghcr.io/shclub/jre17-runtime:v1.0.0"
def git_ops_name = "edu12-backend-gitops"
def P_NAMESPACE = "edu30"

def TAG = getTag(gitBranch)

podTemplate(label: label, serviceAccount: 'jenkins-admin', namespace: P_NAMESPACE,
    containers: [
        containerTemplate(name: 'build-tools', image: 'ghcr.io/shclub/build-tool:v1.0.0', ttyEnabled: true, command: 'cat', privileged: true, alwaysPullImage: true)
        ,containerTemplate(name: 'jnlp', image: 'ghcr.io/shclub/jenkins/jnlp-slave:latest-jdk11', args: '${computer.jnlpmac} ${computer.name}')
    ],
    volumes: [
        hostPathVolume(hostPath: '/etc/containers' , mountPath: '/var/lib/containers' ),
        persistentVolumeClaim(mountPath: '/var/jenkins_home', claimName: 'jenkins-edu-slave-pvc',readOnly: false)
        ]){    
  
  //node("podman-agent") {
    
    node(label) { 
        stage('SCM') {
           checkout scm
       }  
       
        stage('SonarQube Analysis') {
           container('build-tools') {
               withSonarQubeEnv('sonarqube'){ // 시스템설정 값
                 sh "./mvnw clean verify sonar:sonar -Dsonar.projectKey=edu"
             }
           }  
        }
        
         //stage('SonarQube Analysis') {
            //steps{
                //withSonarQubeEnv('sonarqube_local'){ // 시스템설정 값
               //     sh "mvn clean package"
             //       sh "mvn sonar:sonar -Dsonar.projectKey=jenkins_prj -Dsonar.host.url=http://localhost:9000 -Dsonar.login=61344cd942bff25b06f56a8b0d6768xxxxxxxx"
           //     }
         //   }
       // }
        
        
        


    }
}

def getTag(branchName){     
    def TAG
    def DATETIME_TAG = new Date().format('yyyyMMddHHmmss')
    TAG = "${DATETIME_TAG}"
    return TAG
}  
